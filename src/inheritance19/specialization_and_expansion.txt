Приведу 2 любимых примера:

Пусть есть класс Shape, который имеет единственный метод draw(). Назовём его наследника Circle,
который помимо родительского медода draw() может делать changeRadius(). Налицо явная специализация,
т.к. более широкий класс Фигура, породил более узкоспециализированный класс Окружность.

Другой пример. Класс Car имеет наследникака AutonomousCar, который вместе с методом родителя
driving() содержит метод automaticDriving(), наделяющий потомка автопилотом. Это пример расширения
полномочий родителя.

Но на мой взгляд специализация и расширение - это 2 стороны одной медали. Наследование - это по сути
импликация a -> b. Специализация - это его экстенсиональная трактовка, а расширение - интенсиональная.
Действительно, в экстенсиональном смысле в множество Фигур входят все фигуры, в том числе и Окружности.
В интенсиональном смысле понятие Автомобиля с автопилотом содержит поведение как обычного Автомобиля,
так и Автомобиля с автопилотом.

