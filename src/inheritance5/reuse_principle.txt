Java

1. Параметризация другими типами присутствует и представляет механизм Generic типов. Такая
параметризация позволяет соблюдать более строгую типизацию в языке, но не очень удобна, т.к.
содержит механизм стирания из-за которого присвоение переменной конкретного типа невозможна без
сравнения с образцом и явного приведения типов.

2. Такой механизм есть, т.к. модификаторы доступа позволяют методам вызывать друг друга, находясь в
одном модуле.

3. Семейчтва модулей тоже можно найти в Java, например в пакете java.xml, где есть javax.xml.parsers,
javax.xml.stream и другие модули сгруппированные для решения общих задач.

4. Затрудняюсь ответить привести пример. Вроде бы что-то такое есть в пакете java.sql, который
предоставляет реализации интерфейсов и классов для взаимодействия с базами данных. Приложение может
динамически выбирать нужную реализацию драйвера в зависимости от требуемого типа базы данных.

5. Возможно здесь подойдёт пример, где коллекция Set, интегрирует поведение Map из другого модуля.